apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: mon
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    # all input will come from filebeat, no local logs
    input {
      beats {
        port => 5044
      }
    }
    filter {

      mutate {
    remove_field => [ "[kubernetes][container]","[kubernetes][labels]","[meta]","[source]","[stream]","[tags]","[kubernetes][node]","[beat]","[host]","[@version]","[input]","[offset]","[prospector]","[_index]","[_id]","[_type]"]
      }
      if [message] =~ /^\{.*\}$/ {
        json {
          source => "message"
        }
      }
      if "linkerd2_proxy" in [message] { drop{ } }
      if "eksctl-STG-eks-channelvas-nodegroup" in [message] { drop{ } }
      if "ELB-HealthChecker/2.0" in [message] { drop{ } }
      }
    output {
        elasticsearch {
            hosts => [ "elasticsearch:9200" ]
            user => "elastic"
            password => "pbaf-130-dmn"
            index => "logstash-%{+YYYY-MM-dd}"
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-09-28T08:37:26Z"
  generation: 1
  labels:
    app: logstash
  name: logstash-deployment
  namespace: mon
  resourceVersion: "56758318"
  selfLink: /apis/apps/v1/namespaces/mon/deployments/logstash-deployment
  uid: 84ced09a-3e56-4d03-8e45-6d89e4b06d49
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: logstash
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: logstash
    spec:
      containers:
      - image: docker.elastic.co/logstash/logstash:7.4.2
        imagePullPolicy: IfNotPresent
        name: logstash
        ports:
        - containerPort: 5044
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/logstash/config
          name: config-volume
        - mountPath: /usr/share/logstash/pipeline
          name: logstash-pipeline-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: logstash.yml
            path: logstash.yml
          name: logstash-configmap
        name: config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: logstash.conf
            path: logstash.conf
          name: logstash-configmap
        name: logstash-pipeline-volume
---
kind: Service
apiVersion: v1
metadata:
  name: logstash-service
  namespace: mon
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 5044
    targetPort: 5044
  type: ClusterIP
