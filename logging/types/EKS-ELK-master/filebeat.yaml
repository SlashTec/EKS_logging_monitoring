apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: mon
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
data:
  filebeat.yml: |-
    filebeat.config:
      prospectors:
        # Mounted `filebeat-prospectors` configmap:
        path: ${path.config}/prospectors.d/*.yml
        # Reload prospectors configs as they change:
        reload.enabled: false
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: false
    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.logstash:
      hosts: ['logstash-service:5044']
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-prospectors
  namespace: mon
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
data:
  kubernetes.yml: |-
    - type: docker
      containers.ids:
      - "*"
      multiline:
       pattern: '^([0-9]{4}-[0-9]{2}-[0-9]{2})'
       negate: true
       match: after
      processors:
        - add_kubernetes_metadata:
            in_cluster: true
        - drop_event:
           when:
             or:
              - equals:
                 kubernetes.namespace: "default"
              - equals:
                 kubernetes.namespace: "kube-public"
              - equals:
                 kubernetes.namespace: "kube-system"
              - equals:
                 kubernetes.namespace: "mon"
              - equals:
                 kubernetes.namespace: "acs"
              - equals:
                 kubernetes.namespace: "aerospike"
    #           - equals:
      #          kubernetes.namespace: "darwin"
              - equals:
                 kubernetes.namespace: "darwin-sprint"
              - equals:
                 kubernetes.namespace: "elasticsearch"
              - equals:
                 kubernetes.namespace: "freefone"
              - equals:
                 kubernetes.namespace: "jazz"
              - equals:
                 kubernetes.namespace: "linkerd"
              - equals:
                 kubernetes.namespace: "logstash"
              - equals:
                 kubernetes.namespace: "nikola"
              - equals:
                 kubernetes.namespace: "mongo"
     #         - equals:
     #           kubernetes.namespace: "freefone"
              - equals:
                 kubernetes.namespace: "ooredoo"
              - equals:
                 kubernetes.namespace: "rabbitmq"
              - equals:
                 kubernetes.namespace: "smile"
              - equals:
                 kubernetes.namespace: "xtracash"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
  creationTimestamp: "2020-09-28T08:37:25Z"
  generation: 1
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
  name: filebeat
  namespace: mon
  resourceVersion: "58995487"
  selfLink: /apis/apps/v1/namespaces/mon/daemonsets/filebeat
  uid: 4329d222-2ed8-4236-8d18-af33b5093ccd
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: filebeat
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: filebeat
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
      - args:
        - -c
        - /etc/filebeat.yml
        - -e
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-logging
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
        - name: ELASTIC_CLOUD_AUTH
        image: docker.elastic.co/beats/filebeat:6.3.2
        imagePullPolicy: IfNotPresent
        name: filebeat
        resources:
          limits:
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/filebeat.yml
          name: config
          readOnly: true
          subPath: filebeat.yml
        - mountPath: /usr/share/filebeat/prospectors.d
          name: prospectors
          readOnly: true
        - mountPath: /usr/share/filebeat/data
          name: data
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: filebeat
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 384
          name: filebeat-config
        name: config
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
      - configMap:
          defaultMode: 384
          name: filebeat-prospectors
        name: prospectors
      - emptyDir: {}
        name: data
  updateStrategy:
    type: OnDelete
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: mon
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: mon
  labels:
    k8s-app: filebeat
